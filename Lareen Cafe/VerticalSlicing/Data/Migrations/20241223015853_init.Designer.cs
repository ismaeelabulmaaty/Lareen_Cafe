// <auto-generated />
using System;
using LareenCafe.Api.VerticalSlicing.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lareen_Cafe.VerticalSlicing.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241223015853_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.AccountsPayableReceivable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreditOrDebit")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("WareHouseId")
                        .HasColumnType("int");

                    b.Property<int?>("orderId")
                        .HasColumnType("int");

                    b.Property<int?>("purchaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("WareHouseId");

                    b.HasIndex("orderId");

                    b.HasIndex("purchaseId");

                    b.ToTable("accountsPayableReceivables");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("TreasuryId")
                        .HasColumnType("int");

                    b.Property<int>("wareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreasuryId");

                    b.HasIndex("wareHouseId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustomerBalance")
                        .HasColumnType("float");

                    b.Property<string>("CustomerMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<double>("OrderDiscount")
                        .HasColumnType("float");

                    b.Property<double>("RemainingBalance")
                        .HasColumnType("float");

                    b.Property<double>("TotalOrderAfterDicount")
                        .HasColumnType("float");

                    b.Property<double>("TotalOrderBefore")
                        .HasColumnType("float");

                    b.Property<int>("branchId")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<int>("orderTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("branchId");

                    b.HasIndex("customerId");

                    b.HasIndex("orderTypeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("TotalOrderDetails")
                        .HasColumnType("float");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("productPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("orderDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("orderDetailsId");

                    b.ToTable("orderLogs");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("OrderTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("orderType");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("productCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productCategoryId");

                    b.HasIndex("productUnitId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("ProductUnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductsCostControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<double>("RawMaterialAmount")
                        .HasColumnType("float");

                    b.Property<double>("RawMaterialCost")
                        .HasColumnType("float");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double>("RawMaterialsActualPrice")
                        .HasColumnType("float");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RawMaterialId");

                    b.HasIndex("productId");

                    b.ToTable("ProductsCostControls");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseTypeId")
                        .HasColumnType("int");

                    b.Property<double>("RemainingTotal")
                        .HasColumnType("float");

                    b.Property<double>("TotalAfterDiscount")
                        .HasColumnType("float");

                    b.Property<double>("TotalPriceBefore")
                        .HasColumnType("float");

                    b.Property<double>("discountAmount")
                        .HasColumnType("float");

                    b.Property<int>("supplierId")
                        .HasColumnType("int");

                    b.Property<int>("wareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseTypeId");

                    b.HasIndex("supplierId");

                    b.HasIndex("wareHouseId");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchaseLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchasesDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchasesDetailsId");

                    b.ToTable("purchaseLogs");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseTypes");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchasesDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<double>("PurchaseQuantity")
                        .HasColumnType("float");

                    b.Property<double>("TotalPurchaseDetails")
                        .HasColumnType("float");

                    b.Property<int>("purchasesId")
                        .HasColumnType("int");

                    b.Property<int>("rawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("purchasesId");

                    b.HasIndex("rawMaterialId");

                    b.ToTable("purchasesDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMatCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("RawMatCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rawMatCategories");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMatUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("RawMatUnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawMatUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("rawMatUnits");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("RawMaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rawMatCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("rawMatUnitsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rawMatCategoryId");

                    b.HasIndex("rawMatUnitsId");

                    b.ToTable("rawMaterials");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RevokedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("refreshTokens");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<double>("SupplierBalance")
                        .HasColumnType("float");

                    b.Property<string>("SupplierMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Treasury", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AvaialableBalance")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("treasuries");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastCreatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedBy")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("WareHouseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("wareHouses");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.AccountsPayableReceivable", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Branch", null)
                        .WithMany("accountsPayableReceivables")
                        .HasForeignKey("BranchId");

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.WareHouse", null)
                        .WithMany("accountsPayableReceivables")
                        .HasForeignKey("WareHouseId");

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId");

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Purchase", "purchase")
                        .WithMany()
                        .HasForeignKey("purchaseId");

                    b.Navigation("order");

                    b.Navigation("purchase");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Branch", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Treasury", "Treasury")
                        .WithMany()
                        .HasForeignKey("TreasuryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.WareHouse", "wareHouse")
                        .WithMany()
                        .HasForeignKey("wareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treasury");

                    b.Navigation("wareHouse");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Order", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Branch", "branch")
                        .WithMany("orders")
                        .HasForeignKey("branchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Customer", "customer")
                        .WithMany("orders")
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderType", "orderType")
                        .WithMany()
                        .HasForeignKey("orderTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch");

                    b.Navigation("customer");

                    b.Navigation("orderType");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderDetails", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Order", "order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderLog", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.OrderDetails", "orderDetails")
                        .WithMany()
                        .HasForeignKey("orderDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Product", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductCategory", "productCategory")
                        .WithMany()
                        .HasForeignKey("productCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductUnit", "productUnit")
                        .WithMany()
                        .HasForeignKey("productUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategory");

                    b.Navigation("productUnit");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.ProductsCostControl", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMaterial", "RawMaterial")
                        .WithMany("productsCostControls")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Product", "product")
                        .WithMany("productsCostControls")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RawMaterial");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Purchase", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchaseType", "PurchaseType")
                        .WithMany()
                        .HasForeignKey("PurchaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Supplier", "supplier")
                        .WithMany("Purchase")
                        .HasForeignKey("supplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.WareHouse", "wareHouse")
                        .WithMany("purchases")
                        .HasForeignKey("wareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseType");

                    b.Navigation("supplier");

                    b.Navigation("wareHouse");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchaseLog", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchasesDetails", "PurchasesDetails")
                        .WithMany()
                        .HasForeignKey("PurchasesDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchasesDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.PurchasesDetails", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Purchase", "purchases")
                        .WithMany("Purchases")
                        .HasForeignKey("purchasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMaterial", "rawMaterial")
                        .WithMany("purchasesDetails")
                        .HasForeignKey("rawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purchases");

                    b.Navigation("rawMaterial");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMaterial", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMatCategory", "rawMatCategory")
                        .WithMany()
                        .HasForeignKey("rawMatCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMatUnit", "rawMatUnits")
                        .WithMany()
                        .HasForeignKey("rawMatUnitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rawMatCategory");

                    b.Navigation("rawMatUnits");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.UserRole", b =>
                {
                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lareen_Cafe.VerticalSlicing.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Branch", b =>
                {
                    b.Navigation("accountsPayableReceivables");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Customer", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Order", b =>
                {
                    b.Navigation("orderDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Product", b =>
                {
                    b.Navigation("productsCostControls");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Purchase", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.RawMaterial", b =>
                {
                    b.Navigation("productsCostControls");

                    b.Navigation("purchasesDetails");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.Supplier", b =>
                {
                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.User", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Lareen_Cafe.VerticalSlicing.Data.Entities.WareHouse", b =>
                {
                    b.Navigation("accountsPayableReceivables");

                    b.Navigation("purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
